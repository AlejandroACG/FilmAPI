{
	"info": {
		"_postman_id": "b767ed65-2886-420e-96b6-805f3bcce452",
		"name": "FilmAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31328466"
	},
	"item": [
		{
			"name": "directors",
			"item": [
				{
					"name": "getDirectors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 200 OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene datos válidos\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"    pm.expect(jsonData.length).to.be.above(0); \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/directors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"directors"
							]
						}
					},
					"response": []
				},
				{
					"name": "postDirector",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"})\r",
									"\r",
									"pm.test(\"El campo 'name' no puede estar vacío\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.not.be.empty; \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/directors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"directors"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDirectorById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 200 OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene datos válidos\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.not.be.empty; \r",
									"    pm.expect(jsonData).to.be.an('object'); \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene un campo específico\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id'); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/director/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"director",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateDirector",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is not empty\", function () {\r",
									"    pm.response.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/director/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"director",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteDirector",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 204 No Content\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta está vacía\", function() {\r",
									"    pm.expect(pm.response.text()).to.be.empty; \r",
									"});\r",
									"\r",
									"pm.test(\"Tiempo de respuesta dentro del rango aceptable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/director/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"director",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "production-companies",
			"item": [
				{
					"name": "getProductionCompanies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 200 OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene datos válidos\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"    pm.expect(jsonData.length).to.be.above(0); \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/production-companies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"production-companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "postProductionCompany",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Los campo 'name' no puede estar vacío\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.not.be.empty; \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/production-company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"production-company"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProductionCompanyById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 200 OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene datos válidos\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.not.be.empty; \r",
									"    pm.expect(jsonData).to.be.an('object'); \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene un campo específico\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id'); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/production-company/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"production-company",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateProductionCompany",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is not empty\", function () {\r",
									"    pm.response.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/production-company/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"production-company",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteProductionCompany",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 204 No Content\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta está vacía\", function() {\r",
									"    pm.expect(pm.response.text()).to.be.empty; \r",
									"});\r",
									"\r",
									"pm.test(\"Tiempo de respuesta dentro del rango aceptable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/production-company/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"production-company",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "films",
			"item": [
				{
					"name": "getFilms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 200 OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene datos válidos\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"    pm.expect(jsonData.length).to.be.above(0); \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/films",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"films"
							]
						}
					},
					"response": []
				},
				{
					"name": "postFilm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"})\r",
									"\r",
									"pm.test(\"El campo 'title' no puede estar vacío\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.not.be.empty; \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/films",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"films"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFilmById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 200 OK\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene datos válidos\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.not.be.empty; \r",
									"    pm.expect(jsonData).to.be.an('object'); \r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta contiene un campo específico\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id'); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/film/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"film",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateFilm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is not empty\", function () {\r",
									"    pm.response.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta se entrega en un tiempo razonable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/film/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"film",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFilm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El estado de la respuesta es 204 No Content\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"La respuesta está vacía\", function() {\r",
									"    pm.expect(pm.response.text()).to.be.empty; \r",
									"});\r",
									"\r",
									"pm.test(\"Tiempo de respuesta dentro del rango aceptable\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/film/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"film",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}